version: '3'

services:
  # - - - - - #
  recallmaster:
    # depends_on:
    #   chroma:
    #     condition: service_healthy
    #     restart: true
    build:
      context: .
      dockerfile: Dockerfile
    container_name: recallmaster
    volumes:
      - ./:/app/
    restart: "no"
    ports:
      - "5001:5001"
    # networks:
    #   - net

  # chroma:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-chroma
  #   volumes:
  #     - index_data:/chroma/.chroma/index
  #   ports:
  #     - 8000:8000
  #   healthcheck:
  #     # Adjust below to match your container port
  #     test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat" ]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   networks:
  #     - net
  #   cap_add:
  #     - SYS_ADMIN
  #   devices:
  #     - /dev/fuse
  #   env_file: "./.env"

# volumes:
#   index_data:
#     driver: local
#   backups:
#     driver: local

# networks:
#   net:
#     driver: bridge

  # # - - - - - #
  # hello_py_devl:
  #   image: local/hello-python:latest-dev
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: hello_python_devl
  #   restart: "no"
  #   working_dir: "/app_devl/" # set working dir to source code vol mount point
  #   entrypoint: ["python3", "src/app.py"]
  #   ports:
  #     - "5001:5001"
  #   volumes:
  #     - "$PWD:/app_devl/:ro" # mount src code so that we don't have to build container every time during development
  #   env_file:
  #     - .env.example

# - - - - - - - - - - #
# Instructions: (for local development and testing)

# Build the container image (use any ONE of the following commands)
# $ docker-compose build
# $ docker-compose build --no-cache --pull

# Run the container (use any ONE of the following commands)
# $ docker-compose up hello_py_devl && docker-compose rm -fsv
# $ docker-compose up --build hello_py_devl && docker-compose rm -fsv
# $ docker-compose up --build --force-recreate hello_py_devl && docker-compose rm -fsv

# Stop / remove all the containers created by docker-compose
# $ docker-compose down
# $ docker-compose down --rmi all -v --remove-orphans

# Docker compose docs: https://docs.docker.com/compose/
# - - - - - - - - - - #
